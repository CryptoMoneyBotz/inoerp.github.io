{
  "openapi": "3.0.1",
  "info": {
    "title": "REST API For InoERP Purchasing Module",
    "description": "REST APIs are available for all documents and transactions in inoERP. You can find out more about  inoERP at [http://docs.inoerp.com](http://docs.inoerp.com).",
    "termsOfService": "http://docs.inoerp.com/docs/privacy",
    "contact": {
      "email": "contact@inoerp.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more about inoERP",
    "url": "http://docs.inoerp.com/"
  },
  "servers": [
    {
      "url": "http://demo.inoerp.com:8085/api/ierp/"
    },
    {
      "url": "http://demo.inoerp.com:8085/api/ierp/"
    }
  ],
  "tags": [
    {
      "name": "RFQ",
      "description": "Request For Quotation",
      "externalDocs": {
        "description": "Read more",
        "url": "http://docs.inoerp.com/docs/purchasing/request-for-quotation"
      }
    },
    {
      "name": "Quotation",
      "description": "Quotation",
      "externalDocs": {
        "description": "Read more",
        "url": "http://docs.inoerp.com/docs/purchasing/quotation"
      }
    },
    {
      "name": "Requisition",
      "description": "Requisition",
      "externalDocs": {
        "description": "Read more",
        "url": "http://docs.inoerp.com/docs/purchasing/requisition"
      }
    },
    {
      "name": "PO",
      "description": "Purchase Orders",
      "externalDocs": {
        "description": "Read more",
        "url": "http://docs.inoerp.com/docs/purchasing/purchase-order"
      }
    },
    {
      "name": "PurchaseAgreement",
      "description": "Purchase Agreement",
      "externalDocs": {
        "description": "Read more",
        "url": "http://docs.inoerp.com/docs/purchasing/purchase-agreement"
      }
    },
    {
      "name": "Configuration",
      "description": "Configuration",
      "externalDocs": {
        "description": "Read more",
        "url": "http://docs.inoerp.com/docs/purchasing/configuration"
      }
    }
  ],
  "paths": {
    "/PoHeaderEv": {
      "get": {
        "tags": [
          "PO"
        ],
        "summary": "View all purchase orders",
        "operationId": "getPoHeaderEv",
        "responses": {
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "404": {
            "description": "Pet not found",
            "content": {}
          },
          "405": {
            "description": "Validation exception",
            "content": {}
          }
        },
        "security": [
          {
            "inoerp_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "x-codegen-request-body-name": "body"
      },
      "post": {
        "tags": [
          "PO"
        ],
        "summary": "Add a new object",
        "operationId": "addPurchaseOrder",
        "requestBody": {
          "description": "Purchase order that needs to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseOrderHeaderEv"
              }
            }
          },
          "required": true
        },
        "responses": {
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        },
        "security": [
          {
            "inoerp_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
  },
  "components": {
    "schemas": {
      "PurchaseOrderHeaderEv": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "petId": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "shipDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Order Status",
            "enum": [
              "placed",
              "approved",
              "delivered"
            ]
          },
          "complete": {
            "type": "boolean",
            "default": false
          }
        },
        "xml": {
          "name": "Order"
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Category"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "userStatus": {
            "type": "integer",
            "description": "User Status",
            "format": "int32"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Tag"
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "inoerp_auth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
